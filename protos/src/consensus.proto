syntax = "proto3";
import "common.proto";

enum ConsensusType {
  PBFT = 0;
}

message Consensus {
  ConsensusType consensus_type = 1;
  bytes msg = 2;
}

message ConsensusProof {
  ConsensusType consensus_type = 1;
  bytes proof = 2;
}

message BftBaseInfo {
  int64 view_number = 1;
  uint64 sequence = 2;
  int64 replica_id = 3;
}


message BftPrePrepare
{
  BftBaseInfo base = 1;
  bytes value = 2;
  bytes value_digest = 3;
}

message BftPrepare
{
  BftBaseInfo base = 1;
  bytes value_digest = 2;
}

message BftCommit
{
  BftBaseInfo base = 1;
  bytes value_digest = 2;
}

message BftPreparedSet
{
  BftSign pre_prepare = 1;
  repeated BftSign prepare = 2;
}

message BftViewChange
{
  BftBaseInfo base = 1;
  bytes prepared_value_digest = 2; //prepared value hash
}

message BftViewChangeValue
{
  BftSign view_change_env = 1;
  BftPreparedSet prepared_set = 2;
}

message BftNewView
{
  BftBaseInfo base = 1;
  repeated BftSign view_changes = 2;     
  BftSign pre_prepare = 3;  
}

enum BftMessageType {
  PRE_PREPARE = 0;
  PREPARE = 1;
  COMMIT = 2;
  VIEW_CHANGE = 3;
  NEW_VIEW = 4;
  VIEW_CHANGE_VALUE = 5;
}

message Bft
{
  uint64 round_number = 1;
  BftMessageType msg_type = 2;
  BftPrePrepare pre_prepare = 3;
  BftPrepare prepare = 4;
  BftCommit commit = 5;
  BftViewChange view_change = 6;
  BftNewView new_view = 7;
  BftViewChangeValue view_change_value = 8;
}

message BftSign
{
  Bft bft = 1;
  Signature signature = 2;
  string chain_id = 3;
  string chain_hub = 4;
}

message BftProof
{
  repeated BftSign commits = 1;
}

message TxHashList
{
  repeated bytes hash_set = 1;
}

message ViewChangeStore
{
  uint64 sequence = 1;
  int64 view_number = 2;  
  uint64 view_change_round = 3;
  uint64 start_time = 4;
  uint64 end_time = 5;
  uint64 last_propose_time = 6;
  uint64 last_newview_time = 7;
  uint64 new_view_round = 8;
  BftSign view_change_msg = 9;
  BftSign new_view = 10;
  repeated BftSign msg_buffer = 11;
  repeated BftViewChange view_changes = 12;
}

message ViewChangeMessage
{
  repeated ViewChangeStore item = 1;
}


message NewViewRepondParam
{
  int64 view_number = 1;
  BftPreparedSet prepared_set = 2;
}




//for ledger version upgrade
message LedgerUpgrade{
    uint64 new_version = 1;
	  string chain_id = 2;
    string chain_hub = 3;
}


message LedgerUpgradeNotify
{
  int64 nonce = 1;
	LedgerUpgrade upgrade = 2;
	Signature signature = 3;
};

message LedgerUpgradeInfo {
  int64 recv_time=1;
  string address=2;
  LedgerUpgradeNotify msg=3;
};
